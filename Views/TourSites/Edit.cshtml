@using Microsoft.AspNetCore.Authorization
@using TourWebsite.Areas.Identity.Data
@using TourWebsite.Data
@model TourWebsite.Models.Tours.TourEdit

@inject IAuthorizationService auth
@inject TourWebsiteContext _context

@{
    ViewData["Title"] = "Edit";

    AuthorizationResult authorized1 = await auth.AuthorizeAsync(User, null, "TourAccess");

}

<h1>Edit</h1>

<h4>Tours</h4>
<hr />
<div class="row">
    <div class="col-md-8">
        <form asp-action="Edit" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" name="TourID" value="@Model.TourSite.Id" />
            <table class="table table-bordered table-sm">
                <div class="form-group">
                    <label asp-for="Title" class="control-label">Title</label>
                    <input asp-for="Title" class="form-control" value="@Model.TourSite.Title" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
            </table>

            @if (Model.TourSite.ThumbnailID == null)
            {
                <table class="table table-bordered table-sm">
                    <div class="form-group">
                        <label asp-for="Thumbnail" class="control-label">Thumbnail</label>
                        <input asp-for="Thumbnail" class="form-control" type="file" name="Thumbnail">
                    </div>
                </table>
            }
            else
            {

                var file = await _context.UploadedFiles.FindAsync(Model.TourSite.ThumbnailID);
                if (file != null)
                {
                    <label class="control-label h2"></label>
                    var base64 = Convert.ToBase64String(file.Bytes);
                    var Image = String.Format("data:image/gif;base64,{0}", base64);
                    <img src="@Image" alt="" class="img-fluid">

                    <label>Remove Thumbnail: </label><input type="checkbox" asp-for="RemoveThumbnail" />
                }
            }
            <table class="table table-bordered table-sm">
                <div class="form-group">
                    <label name="TourDescription" class="control-label">Description</label>
                    <input id="descriptionVal", type="hidden" class="form-control" value="@Model.TourSite.Description" />
                    <textarea id="tiny" name="TourDescription" class="form-control"></textarea>
                    <span asp-validation-for="TourSite.Description" class="text-danger"></span>
                </div>
            </table>
            <table class="table table-bordered table-sm">
                <div class="form-group">
                    <label asp-for="Longitude" class="control-label">Longitude</label>
                    <input asp-for="Longitude" class="form-control" value="@Model.TourSite.Longitude" />
                    <span asp-validation-for="Longitude" class="text-danger"></span>
                </div>
            </table>
            <table class="table table-bordered table-sm">
                <div class="form-group">
                    <label asp-for="Lattitude" class="control-label">Latitude</label>
                    <input asp-for="Lattitude" class="form-control" value="@Model.TourSite.Lattitude" />
                    <span asp-validation-for="Lattitude" class="text-danger"></span>
                </div>
            </table>


            @if(authorized1.Succeeded) {
            <label>Visibility</label>
            <select name="Visibility" asp-items="Html.GetEnumSelectList<VisibilityType>()">
                <option selected="selected" value="@Model.TourSite.Visibility">Currently: @Model.TourSite.Visibility</option>

            </select>

            @if (Model.TourSite.Visibility == VisibilityType.Restricted) {
                <table class="table table-bordered table-sm">
                    <div type="email" class="form-group">
                        <label asp-for="EmailViewer" class="control-label">Add Viewers</label>
                            <a href="javascript:void(0);" name="/Role/UserList" class="modalManager" extra-data='#MyScriptData'>Pick user</a>
                            <script type="application/json" id="MyScriptData">
                                {
                                "Target": "ViewerBox"
                                }
                            </script>
                            <input asp-for=EmailViewer id="ViewerBox" class="form-control" value=""/>
                        <span asp-validation-for="EmailViewer" class="text-danger"></span>
                    </div>
                </table>

                <label>Remove viewers from @Model.TourSite.Title</label>
                <table class="table table-bordered table-sm">
                    @if (Model.Viewers.Count() == 0)
                    {
                        <tr><td colspan="2">No Users Are Viewers</td></tr>
                    }
                    else
                    {
                        @foreach (TourWebsiteUser user in Model.Viewers)
                        {
                            <tr>
                                <td>@user.UserName</td>
                                <td>
                                    <input type="checkbox" name="DeleteIdsViewer" value="@user.Email">
                                </td>
                            </tr>
                        }
                    }
                </table>
            }

            <table class="table table-bordered table-sm">
                <div type="email" class="form-group">
                    <label asp-for="Email" class="control-label">Add editors</label>
                    <a href="javascript:void(0);" name="/Role/UserList" class="modalManager" extra-data='#MyScriptData2'>Pick user</a>
                    <script type="application/json" id="MyScriptData2">
                        {
                        "Target": "EmailBox"
                        }
                    </script>
                        <input asp-for="Email" id="EmailBox" class="form-control" value="" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
            </table>

            <label>Remove editors from @Model.TourSite.Title</label>
            <table class="table table-bordered table-sm">
                @if (Model.Members.Count() == 0)
                {
                    <tr><td colspan="2">No Users Are Editors</td></tr>
                }
                else
                {
                    @foreach (TourWebsiteUser user in Model.Members)
                    {
                        <tr>
                            <td>@user.UserName</td>
                            <td>
                                <input type="checkbox" name="DeleteIds" value="@user.Email">
                            </td>
                        </tr>
                    }
                }
            </table>
            }

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>

    var text = document.getElementById('descriptionVal').value;
        console.log(text);

        tinymce.init({

        selector: 'textarea#tiny',
        license_key: 'gpl',
            plugins: 'lists',
    toolbar: 'numlist bullist',
        promotion: false,
            setup: function (editor) {
              editor.on('init', function (e) {
                editor.setContent(text);
              });
        }
        });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


}
