@using Microsoft.AspNetCore.Authorization
@using TourWebsite.Areas.Identity.Data
@model NonTourPage
@inject IAuthorizationService auth

@{
    ViewData["Title"] = "Index";


    AuthorizationResult authorized1 = await auth.AuthorizeAsync(User, null, "TourAccess");

}

<div>

    <table cellpadding="0" cellspacing="0" border="0" style="background-color:rgba(70, 130, 180, 0)">
        <tr>
            <td class="col-12" style="vertical-align: text-top;">
                @Html.Raw(Model.Description)
            </td>
        </tr>
    </table>

</div>
<a class="btn btn-primary" asp-action="ListView" style="background-color:@Model.MainColor; border-color:@Model.MainColor">List View</a>

@if (authorized1.Succeeded)
{
    <a class="btn btn-primary" asp-action="AddNewTour" style="background-color:@Model.MainColor; border-color:@Model.MainColor">Add New Site</a>
}

@section Scripts { 
   @{await Html.RenderPartialAsync("_ValidationScriptsPartial");} 

} 


@section Map {

    <a hidden href="javascript:void(0);" name="/TourSites/Details" class="modalManager" id="mapPopUp" extra-data='#MyScriptData'></a>
    <script type="application/json" id="MyScriptData">
        {
        "Target": "EmailBox"
        }
    </script>
    <div id="viewDiv"></div>
}
