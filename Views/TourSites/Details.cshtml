@using Microsoft.AspNetCore.Authorization
@using TourWebsite.Data
@model ValueTuple<TourWebsite.Models.TourSite, bool>

@inject TourWebsiteContext _context
@inject IAuthorizationService authService;

@{
    ViewData["Title"] = "Details";
    var allowedUsers2 = Model.Item1.ApprovedEditUsers;
    AuthorizationResult authorized3 = await authService.AuthorizeAsync(User, allowedUsers2, "TourAccess"); //Who can edit this
    AuthorizationResult authorized = await authService.AuthorizeAsync(User, null, "TourAccess"); //Who can delete this
}


@if(Model.Item2)
{
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true" onclick="$('#myModal').modal('hide');">×</button>
        <h3>@Model.Item1.Title</h3>
    </div>
}
else {
    <h1>Details</h1>
}
<div>

    @foreach(string lastId in Model.Item1.LastTourSiteIDs)
    {

        {
            var prev = await _context.TourSites.FindAsync(lastId);
            if (prev != null)
            {
                if (prev != null)
                {
                    AuthorizationResult nextAuth1 = await authService.AuthorizeAsync(User, prev.ApprovedEditUsers, "TourAccess"); //Who can edit this
                    AuthorizationResult nextAuth2 = await authService.AuthorizeAsync(User, prev.ApprovedUsers, "TourAccess"); //Who can view this

                    if (nextAuth1.Succeeded || nextAuth2.Succeeded)
                    {
                        <a asp-action="Details" class="btn btn-primary" asp-route-id="@prev.Id">Previous Tour: @prev.Title</a>

                    }

                }
            }
        }

    }
    @if (Model.Item1.NextTourSiteID != null)
    {
        {
            var next = await _context.TourSites.FindAsync(Model.Item1.NextTourSiteID);
            if (next != null)
            {
                AuthorizationResult nextAuth1 = await authService.AuthorizeAsync(User, next.ApprovedEditUsers, "TourAccess"); //Who can edit this
                AuthorizationResult nextAuth2 = await authService.AuthorizeAsync(User, next.ApprovedUsers, "TourAccess"); //Who can view this

                if (nextAuth1.Succeeded || nextAuth2.Succeeded)
                {
                    <a asp-action="Details" class="btn btn-primary" asp-route-id="@next.Id">Next Tour: @next.Title</a>
                    
                }

            }
        }
    }
</div>

<div>
    <hr />
    <div class="form-group col-4">
        @{
            if (Model.Item1.ThumbnailID != null)
            {

                var file = await _context.UploadedFiles.FindAsync(Model.Item1.ThumbnailID);

                if (file != null) {
                    @Html.Raw(file.HtmlString());
                }
            }

        }
    </div>
    <dl class="row">
        <dd class = "col-sm-8">
            @Html.Raw(Model.Item1.Description)
        </dd>
        <br />
        <dt class = "col-sm-4">
            @Html.DisplayNameFor(model => model.Item1.Longitude)
        </dt>
        <dd class = "col-sm-8">
            @Html.DisplayFor(model => model.Item1.Longitude)
        </dd>
        <dt class = "col-sm-4">
            @Html.DisplayNameFor(model => model.Item1.Lattitude)
        </dt>
        <dd class = "col-sm-8">
            @Html.DisplayFor(model => model.Item1.Lattitude)
        </dd>

        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Item1.Tags)
        </dt>
        <dd class="col-sm-8">
            @Html.Raw(Model.Item1.TagsToString())
        </dd>


        @if (authorized3.Succeeded)
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Item1.UniqueClicks)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Item1.UniqueClicks)
            </dd>

            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Item1.UniqueVisitors)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Item1.UniqueClicks)
            </dd>

            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Item1.VisitorSeconds)
            </dt>
            <dd class="col-sm-8">
                @Html.Raw(Model.Item1.TotalTimeVisited())
            </dd>
        }
    </dl>
</div>
<div>

    @if (authorized3.Succeeded)
    {
        <a asp-action="Edit" asp-route-id="@Model.Item1.Id" class="btn btn-primary">Edit</a>
    }
    @if (authorized.Succeeded)
    {
        <a asp-action="Delete" asp-route-id="@Model.Item1.Id" class="btn btn-primary">Delete</a>
    }
    @if (!Model.Item2)
    {
        <a asp-action="Index" class="btn btn-primary">Back to List</a>
    }
</div>
