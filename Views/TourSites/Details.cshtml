@using TourWebsite.Data
@model TourWebsite.Models.TourSite

@inject TourWebsiteContext _context

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <hr />
    <div class="form-group col-4">
        @{
            if (Model.ThumbnailID != null)
            {

                var file = await _context.UploadedFiles.FindAsync(Model.ThumbnailID);
                if (file != null)
                {
                    <label class="control-label h2"></label>
                    var base64 = Convert.ToBase64String(file.Bytes);
                    var Image = String.Format("data:image/gif;base64,{0}", base64);
                    <img src="@Image" alt="" class="img-fluid">
                }
            }
        }
    </div>
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.Raw(Model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Longitude)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Longitude)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Lattitude)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Lattitude)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
