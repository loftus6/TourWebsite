@using Microsoft.AspNetCore.Authorization
@using TourWebsite.Data
@model ValueTuple<TourWebsite.Models.TourSite, bool>

@inject TourWebsiteContext _context
@inject IAuthorizationService authService;

@{
    ViewData["Title"] = "Details";
    var allowedUsers2 = Model.Item1.ApprovedEditUsers;
    AuthorizationResult authorized3 = await authService.AuthorizeAsync(User, allowedUsers2, "TourAccess"); //Who can edit this
    AuthorizationResult authorized = await authService.AuthorizeAsync(User, null, "TourAccess"); //Who can delete this
}


@if(Model.Item2)
{
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true" onclick="$('#myModal').modal('hide');">×</button>
        <h2>Details</h2>
    </div>
}
else {
    <h1>Details</h1>
}
<div>

    @if (Model.Item1.LastTourSiteID != null)
    {
        <a asp-action="Details" asp-route-id="@Model.Item1.LastTourSiteID">Previous Tour</a>
    }
    @if (Model.Item1.NextTourSiteID != null)
    {
        <a asp-action="Details" asp-route-id="@Model.Item1.NextTourSiteID">Next Tour</a>
    }
</div>

<div>
    <hr />
    <div class="form-group col-4">
        @{
            if (Model.Item1.ThumbnailID != null)
            {

                var file = await _context.UploadedFiles.FindAsync(Model.Item1.ThumbnailID);

                if (file != null) {
                    @Html.Raw(file.HtmlString());
                }
            }

        }
    </div>
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Item1.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Item1.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Item1.Description)
        </dt>
        <br />
        <dd class = "col-sm-10">
            @Html.Raw(Model.Item1.Description)
        </dd>
        <br />
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Item1.Longitude)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Item1.Longitude)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Item1.Lattitude)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Item1.Lattitude)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Item1.Tags)
        </dt>
        <dd class="col-sm-10">
            @Html.Raw(Model.Item1.TagsToString())
        </dd>
    </dl>
</div>
<div>

    @if (authorized3.Succeeded)
    {
        <a asp-action="Edit" asp-route-id="@Model.Item1.Id">Edit</a>
    }
    @if (authorized.Succeeded)
    {
        <a asp-action="Delete" asp-route-id="@Model.Item1.Id">Delete</a>
    }
    <a asp-action="Index">Back to List</a>
</div>
